buildscript {
    ext.kotlin_version = '1.2.51'
    ext.ktor_version = '0.9.1' // ktor version

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"


    }
}

group 'com.healer.server'
version '1.0-SNAPSHOT'

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'java'

mainClassName = 'com.healer.server.TestServerkt'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url  "http://dl.bintray.com/kotlin/ktor" } // ktor maven
    maven { url "https://dl.bintray.com/kotlin/kotlinx" } //kotlinx maven
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.slf4j:slf4j-nop:1.7.25'
    compile "io.ktor:ktor:$ktor_version" // ktor dependency
    compile "io.ktor:ktor-server-netty:$ktor_version" // ktor netty dependency
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

}
jar { // To Build a jar
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.healer.server.TestServerKt'
        )
    }

    from { //Pack Dependencies into the jar file
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
kotlin {
    experimental {
        coroutines "enable"
    }
}

task stage {
    dependsOn installDist
}